<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Asher&#39;s blog</title>
    <link>http://example.org/</link>
    <description>Recent content on Asher&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>2524729719@qq.com (陈晓拉尼-Asher)</managingEditor>
    <webMaster>2524729719@qq.com (陈晓拉尼-Asher)</webMaster>
    <lastBuildDate>Sun, 17 Oct 2021 21:22:27 +0800</lastBuildDate>
    <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>springboot如何快速入门</title>
      <link>http://example.org/springboot%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 17 Oct 2021 21:22:27 +0800</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/springboot%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
      <description>前一段时间一直在看Java，一直没有总结，今天总结下spring boot如何快速入门。 前置条件 学习Java，环境当然要装，以下几个直接无脑装</description>
    </item>
    <item>
      <title>使用Rollup打包Vue或React组件库并发布到npm</title>
      <link>http://example.org/%E4%BD%BF%E7%94%A8rollup%E6%89%93%E5%8C%85vue%E6%88%96react%E7%BB%84%E4%BB%B6%E5%BA%93%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0npm/</link>
      <pubDate>Sun, 29 Nov 2020 23:39:46 +0800</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E4%BD%BF%E7%94%A8rollup%E6%89%93%E5%8C%85vue%E6%88%96react%E7%BB%84%E4%BB%B6%E5%BA%93%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0npm/</guid>
      <description>最近在写一些Vue和React相关的组件库，涉及到打包文件发布npm这一块，在对比了webpack和rollup两种打包工具之后，决定使用r</description>
    </item>
    <item>
      <title>Java之多线程初步总结</title>
      <link>http://example.org/java%E4%B9%8B%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%88%9D%E6%AD%A5%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 09 Jul 2020 20:23:29 +0800</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/java%E4%B9%8B%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%88%9D%E6%AD%A5%E6%80%BB%E7%BB%93/</guid>
      <description>在java中，代码是阻塞同步执行的，为了更好的利用CPU资源，多线程的使用是十分有必要的，与之相关的，不得不提的还有一个进程，所谓进程即是代</description>
    </item>
    <item>
      <title>Map集合和Collection集合常用类的总结</title>
      <link>http://example.org/map%E9%9B%86%E5%90%88%E5%92%8Ccollection%E9%9B%86%E5%90%88%E5%B8%B8%E7%94%A8%E7%B1%BB%E7%9A%84%E6%80%BB%E7%BB%93/</link>
      <pubDate>Fri, 26 Jun 2020 18:04:47 +0800</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/map%E9%9B%86%E5%90%88%E5%92%8Ccollection%E9%9B%86%E5%90%88%E5%B8%B8%E7%94%A8%E7%B1%BB%E7%9A%84%E6%80%BB%E7%BB%93/</guid>
      <description>Java中的数组有很多弊端，长度固定，不可增加删除操作，只能存储同一种数据类型，而且数组内元素的内存空间是连续分配的，对内存要求高点；而Ja</description>
    </item>
    <item>
      <title>Java的包管理</title>
      <link>http://example.org/java%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 22 Jun 2020 22:41:12 +0800</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/java%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86/</guid>
      <description>java中的包就是一些第三方的类库，跟前端的npm包差不多，前端通过npm这个平台管理npm包，在java中通过maven来实现包管理。 ma</description>
    </item>
    <item>
      <title>hugo博客搭建</title>
      <link>http://example.org/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Fri, 19 Jun 2020 22:07:53 +0800</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</guid>
      <description>最近把博客从hexo搬到了hugo，感觉确实比hexo快了不少，尤其是在部署的时候，直接push就好了，关于hugo的教程网上有很多，本篇文</description>
    </item>
    <item>
      <title>Deno 初体验</title>
      <link>http://example.org/deno-%E5%88%9D%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Sun, 24 May 2020 16:48:25 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/deno-%E5%88%9D%E4%BD%93%E9%AA%8C/</guid>
      <description>最近node.js之父又搞了个Deno.js，同样是基于V8引擎，据说对比node.js改进了不少，周末有时间就来体验了一下。 安装 安装 1 curl -fsSL</description>
    </item>
    <item>
      <title>webpack配置app和pc多入口</title>
      <link>http://example.org/webpack%E9%85%8D%E7%BD%AEapp%E5%92%8Cpc%E5%A4%9A%E5%85%A5%E5%8F%A3/</link>
      <pubDate>Sun, 08 Dec 2019 17:20:24 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/webpack%E9%85%8D%E7%BD%AEapp%E5%92%8Cpc%E5%A4%9A%E5%85%A5%E5%8F%A3/</guid>
      <description>需求：原先做的app端又增加了pc端，现在把他们放在同一个项目下，就需要我们配置多入口了。 原先页面为index.html,后面增加pcJs.</description>
    </item>
    <item>
      <title>无意间用了React Portals</title>
      <link>http://example.org/%E6%97%A0%E6%84%8F%E9%97%B4%E7%94%A8%E4%BA%86react-portals/</link>
      <pubDate>Sat, 28 Sep 2019 21:32:59 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E6%97%A0%E6%84%8F%E9%97%B4%E7%94%A8%E4%BA%86react-portals/</guid>
      <description>不知哪天随手点开了一篇react portals的文章,眼前一亮,竟然还没有我听说过的react的特性,在看了大概之后,并没有觉得有什么用,不</description>
    </item>
    <item>
      <title>使用OAuth授权第三方网站</title>
      <link>http://example.org/%E4%BD%BF%E7%94%A8oauth%E6%8E%88%E6%9D%83%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BD%91%E7%AB%99/</link>
      <pubDate>Thu, 08 Aug 2019 19:23:23 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E4%BD%BF%E7%94%A8oauth%E6%8E%88%E6%9D%83%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BD%91%E7%AB%99/</guid>
      <description>OAuth是一种行业标准的授权方式，我们在登录一些网站时，其也可以使用第三方账号比如QQ或者微信登录， 都是使用OAuth授权的， 版本有1.x</description>
    </item>
    <item>
      <title>React Hooks实践</title>
      <link>http://example.org/react-hooks%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Fri, 02 Aug 2019 21:51:06 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/react-hooks%E5%AE%9E%E8%B7%B5/</guid>
      <description>React Hook 是React16.8提出来的一个新特性，其意义就在于我们可以让函数组件变得跟类组件一样有能力管理自己的状态，这意味着我们以后写的所有组件</description>
    </item>
    <item>
      <title>java中解析XML</title>
      <link>http://example.org/java%E4%B8%AD%E8%A7%A3%E6%9E%90xml/</link>
      <pubDate>Wed, 24 Jul 2019 13:57:59 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/java%E4%B8%AD%E8%A7%A3%E6%9E%90xml/</guid>
      <description>xml文件一般有三种用途，1. 可以用来保存数据，2. 可以用来做配置文件，3. 数据传输载体，本篇文章主要记载java中如何解析XML文件。 XM</description>
    </item>
    <item>
      <title>使用JDBC对Mysql数据库的CRUD操作</title>
      <link>http://example.org/%E4%BD%BF%E7%94%A8jdbc%E5%AF%B9mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84crud%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 22 Jul 2019 00:30:19 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E4%BD%BF%E7%94%A8jdbc%E5%AF%B9mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84crud%E6%93%8D%E4%BD%9C/</guid>
      <description>JDBC全称为JAVA Database Connectivity (java数据库连接),是SUN公司提供的一种数据库访问规则、规范, 由于数据库种类较多，并且java语言使用比较广</description>
    </item>
    <item>
      <title>MYSQL的CRUD操作之命令行</title>
      <link>http://example.org/mysql%E7%9A%84crud%E4%B9%8B%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sat, 13 Jul 2019 22:04:38 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/mysql%E7%9A%84crud%E4%B9%8B%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%93%8D%E4%BD%9C/</guid>
      <description>数据库分为关系型数据库和非关系型数据库，作为前端，对于mongodb再熟悉不过了，mongodb就是非关系型数据库，除此之外还有常见的还有r</description>
    </item>
    <item>
      <title>antd design 中表格数据导出为excel(支持多表头)</title>
      <link>http://example.org/antd-design-%E4%B8%AD%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA%E4%B8%BAexcel-%E6%94%AF%E6%8C%81%E5%A4%9A%E8%A1%A8%E5%A4%B4/</link>
      <pubDate>Tue, 02 Jul 2019 15:52:10 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/antd-design-%E4%B8%AD%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA%E4%B8%BAexcel-%E6%94%AF%E6%8C%81%E5%A4%9A%E8%A1%A8%E5%A4%B4/</guid>
      <description>在之前的项目中遇到一个需求，需要支持将antd design 中表格数据（多表头）导出到excel,看了网上的例子很少，这里就记录一下。 主要用到了bett</description>
    </item>
    <item>
      <title>手动实现一个简单的promise</title>
      <link>http://example.org/%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AApromise/</link>
      <pubDate>Sun, 06 Jan 2019 17:56:20 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AApromise/</guid>
      <description>一直在用promise，也想过自己能不能也实现一个简单的promise，但是一直没有时间；这不最近辞职了，时间就多起来了。当然也参考了网上很</description>
    </item>
    <item>
      <title>js设计模式之迭代器模式</title>
      <link>http://example.org/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sun, 06 Jan 2019 14:20:23 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
      <description>迭代器模式是指提供一种方法顺序访问一个聚合对象中的各个元素，而又不需要暴露该对象的内部表示。总结两点，第一顺序访问一个集合，第二使用者无需知</description>
    </item>
    <item>
      <title>js设计模式之状态模式</title>
      <link>http://example.org/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 02 Jan 2019 01:09:14 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F/</guid>
      <description>状态模式往往会带来代码量的增加，但是它也许是解决某些需求场景的最好方法，状态模式的关键是区分事物内部的状态，事物内部的状态往往会带来事物行为</description>
    </item>
    <item>
      <title>js设计模式之装饰者模式</title>
      <link>http://example.org/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 24 Dec 2018 23:48:13 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>装饰者模式能够在不改变对象自身的基础上，在程序运行期间给对象动态地添加指责，总结来说就是两点，第一为对象添加新功能，第二不改变原有的结构和功</description>
    </item>
    <item>
      <title>js设计模式之适配器模式</title>
      <link>http://example.org/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 17 Dec 2018 00:12:11 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
      <description>适配器模式是一种简单设计模式，主要是用来解决老接口不兼容的问题，对于不兼容的老接口，我们没必要重写，只需创建一个适配器即可。 获取城市接口例子</description>
    </item>
    <item>
      <title>js设计模式之代理模式</title>
      <link>http://example.org/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 05 Dec 2018 22:03:04 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</guid>
      <description>代理模式的定义：为一个对象提供代用品或占位符，以便控制对它的访问；注意使用者无权访问目标对象的。 最常见的就是科学上网了 代理模式根据其目的，也</description>
    </item>
    <item>
      <title>js设计模式之单例模式</title>
      <link>http://example.org/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 04 Dec 2018 23:44:21 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/js%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>单例模式的定义: 保证一个类仅有一个实例，并且提供一个访问它的全局访问点。意义为减少内存开支，减少变量冲突。 常见的应用场景 全局的window对</description>
    </item>
    <item>
      <title>总结一下JavaScript中的this</title>
      <link>http://example.org/%E8%B0%88%E4%B8%80%E8%B0%88javascript%E4%B8%AD%E7%9A%84this/</link>
      <pubDate>Tue, 16 Oct 2018 22:09:25 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E8%B0%88%E4%B8%80%E8%B0%88javascript%E4%B8%AD%E7%9A%84this/</guid>
      <description>有的时候我们总是被JavaScript中的this搞得晕头转向，因为它的不确定性，也被经常拿来当作考题，我们也经常听到网上最认同的说法：“谁</description>
    </item>
    <item>
      <title>TypeScript入门</title>
      <link>http://example.org/typescript%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 17 Sep 2018 23:25:48 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/typescript%E5%85%A5%E9%97%A8/</guid>
      <description>TypeScript主要提供了类型系统和对ES6的支持,对于一个需要长期维护的项目，使用TypeScript可以减少维护成本。使用VSCod</description>
    </item>
    <item>
      <title>从头开始配置webpack4</title>
      <link>http://example.org/%E4%BB%8E%E5%A4%B4%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AEwebpack4/</link>
      <pubDate>Sun, 09 Sep 2018 23:25:12 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E4%BB%8E%E5%A4%B4%E5%BC%80%E5%A7%8B%E9%85%8D%E7%BD%AEwebpack4/</guid>
      <description>最近好像流行零配置，parcel的开箱即用的概念，也影响了webpack4,在 webapck4中也开始朝着这个方向发展，比如默认的入口为sr</description>
    </item>
    <item>
      <title>redux快速入门</title>
      <link>http://example.org/redux%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link>
      <pubDate>Wed, 29 Aug 2018 23:34:46 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/redux%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
      <description>redux和vuex一样，当项目数据复杂时，都是用来集中管理数据的，不过redux是单向数据流绑定,这就使得redux中的store必须放到</description>
    </item>
    <item>
      <title>vue中使用elementUI，表格的单选全选</title>
      <link>http://example.org/vue%E4%B8%AD%E4%BD%BF%E7%94%A8elementui%E8%A1%A8%E6%A0%BC%E7%9A%84%E5%8D%95%E9%80%89%E5%85%A8%E9%80%89/</link>
      <pubDate>Thu, 28 Jun 2018 23:41:46 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/vue%E4%B8%AD%E4%BD%BF%E7%94%A8elementui%E8%A1%A8%E6%A0%BC%E7%9A%84%E5%8D%95%E9%80%89%E5%85%A8%E9%80%89/</guid>
      <description>&lt;p&gt;在vue中使用elementUI中时表格，如何拿到单选或者多选（全选）的值？先记下一笔。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ES6笔记（四）扩展对象的功能性</title>
      <link>http://example.org/es6%E7%AC%94%E8%AE%B0%E5%9B%9B%E6%89%A9%E5%B1%95%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8A%9F%E8%83%BD%E6%80%A7/</link>
      <pubDate>Tue, 03 Apr 2018 16:17:56 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/es6%E7%AC%94%E8%AE%B0%E5%9B%9B%E6%89%A9%E5%B1%95%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%8A%9F%E8%83%BD%E6%80%A7/</guid>
      <description>&lt;h3 id=&#34;对象的语法的扩展&#34;&gt;对象的语法的扩展&lt;/h3&gt;
&lt;h4 id=&#34;1对象的属性或属性值可以直接传入变量&#34;&gt;(1)对象的属性或属性值可以直接传入变量&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;:&lt;span class=&#34;kt&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;2在对象中方法的简写&#34;&gt;(2)在对象中方法的简写&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//es5 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;handle&lt;/span&gt;:&lt;span class=&#34;kt&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;//dosomething 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;//es6 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;nx&#34;&gt;handle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;//dosomething 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>ES6笔记（三）函数</title>
      <link>http://example.org/es6%E7%AC%94%E8%AE%B0%E4%B8%89%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 02 Apr 2018 11:31:08 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/es6%E7%AC%94%E8%AE%B0%E4%B8%89%E5%87%BD%E6%95%B0/</guid>
      <description>函数参数的默认值 以前es5的做法是这样的： 1 function log(x) { x = x || 10; console.log(x) } 这样做的坏处是有的时候我想传一个空字符，也会被修改为默认值 es6的做法直接在</description>
    </item>
    <item>
      <title>ES6笔记（二）字符串和正则表达式</title>
      <link>http://example.org/es6%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Fri, 30 Mar 2018 14:46:41 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/es6%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>字符串 字符串模板 字符串模板用``来表示，示例如下: 1 let template = `${变量1}` 可以看到字符串模板主要有两个特点 字符串换行不再需要+来拼接，里面的</description>
    </item>
    <item>
      <title>ES6笔记（一）块级作用域的绑定</title>
      <link>http://example.org/es6%E7%AC%94%E8%AE%B0%E4%B8%80%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%9A%84%E7%BB%91%E5%AE%9A/</link>
      <pubDate>Fri, 30 Mar 2018 10:28:22 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/es6%E7%AC%94%E8%AE%B0%E4%B8%80%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F%E7%9A%84%E7%BB%91%E5%AE%9A/</guid>
      <description>前言 在学习的过程中也用过不少ES6语法，比如箭头函数，promise，class等，但从来没有好好的从头捋一遍，es6是2015年出的，现在</description>
    </item>
    <item>
      <title>vue/node搭建简易博客</title>
      <link>http://example.org/node%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 22 Feb 2018 20:04:14 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/node%E6%90%AD%E5%BB%BA%E7%AE%80%E6%98%93%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;h2 id=&#34;服务器&#34;&gt;服务器&lt;/h2&gt;
&lt;p&gt;阿里云学生豪华套餐（centos系统）&lt;/p&gt;
&lt;h2 id=&#34;前端&#34;&gt;前端&lt;/h2&gt;
&lt;p&gt;vue-cli vue脚手架 vue-router 路由控制 vue-axios 发送请求 element-ui 饿了么图库 marked和highlight.js markdown语法 stylus css预处理 moment.js 一个时间格式库 lodash JavaScript工具库&lt;/p&gt;</description>
    </item>
    <item>
      <title>vue/node聊天室</title>
      <link>http://example.org/node%E8%81%8A%E5%A4%A9%E5%AE%A4/</link>
      <pubDate>Tue, 20 Feb 2018 17:28:48 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/node%E8%81%8A%E5%A4%A9%E5%AE%A4/</guid>
      <description>介绍 主要用到socket.io,前端用vue，后端用express转接消息 GitHub https://github.com/mywebc/VUE-Chat</description>
    </item>
    <item>
      <title>iview-cli搭建，一个简单的todoList</title>
      <link>http://example.org/iview-cli%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84todolist/</link>
      <pubDate>Sat, 10 Feb 2018 15:12:02 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/iview-cli%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84todolist/</guid>
      <description>打包注意点 在man.js中注释掉mode:history,这个只有在开启服务器下才有效； 在webpack.prod.config.js中把输</description>
    </item>
    <item>
      <title>nginx常用命令总结</title>
      <link>http://example.org/nginx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 24 Jan 2018 23:34:12 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/nginx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</guid>
      <description>查看nginx是否启动 ps -ef | grep nginx //用ps -ef列出进程列表，然后通过grep过滤。 ps -C nginx -o pid //直接查看进程id nginx的启动，停止，与</description>
    </item>
    <item>
      <title>前后端分离小demo</title>
      <link>http://example.org/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%B0%8Fdemo/</link>
      <pubDate>Mon, 18 Dec 2017 10:29:21 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%B0%8Fdemo/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;目的：前端请求后端，插入数据到数据库。 新建两个文件夹，vueServer和vueClient&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;vueServer&lt;/p&gt;</description>
    </item>
    <item>
      <title>前后端为什么要分离？</title>
      <link>http://example.org/%E5%89%8D%E5%90%8E%E7%AB%AF%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%88%86%E7%A6%BB/</link>
      <pubDate>Thu, 14 Dec 2017 20:48:52 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E5%89%8D%E5%90%8E%E7%AB%AF%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%88%86%E7%A6%BB/</guid>
      <description>分享一下 http://2014.jsconf.cn/slides/herman-taobaoweb/#/</description>
    </item>
    <item>
      <title>原生js封装ajax</title>
      <link>http://example.org/%E5%8E%9F%E7%94%9Fjs%E5%B0%81%E8%A3%85ajax/</link>
      <pubDate>Tue, 12 Dec 2017 14:20:24 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E5%8E%9F%E7%94%9Fjs%E5%B0%81%E8%A3%85ajax/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;面试大概率会考到&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>数组去重的三种方法</title>
      <link>http://example.org/%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 12 Dec 2017 11:36:40 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/</guid>
      <description>一、利用indexOf方法剔除 1 2 3 4 5 6 7 8 9 10 var newArr = [] function removeArr (arr) { for (var i = 0;i &amp;lt; arr.length; i++){ // 如果等于-1的话，push进newArr if(newArr.indexOf(arr[i] === -1)) { newArr.push(arr[i]) } } return</description>
    </item>
    <item>
      <title>数组内元素随机排序的三种方法</title>
      <link>http://example.org/%E6%95%B0%E7%BB%84%E5%86%85%E5%85%83%E7%B4%A0%E9%9A%8F%E6%9C%BA%E6%8E%92%E5%BA%8F%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 11 Dec 2017 23:38:06 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E6%95%B0%E7%BB%84%E5%86%85%E5%85%83%E7%B4%A0%E9%9A%8F%E6%9C%BA%E6%8E%92%E5%BA%8F%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E6%B3%95/</guid>
      <description>一、利用数组方法sort 1 // 数组的sort方法，如果a&amp;gt;b,则正序排，a 二、经典的洗牌算法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // 我们先定义</description>
    </item>
    <item>
      <title>慕课网项目：炸鸡音乐播放器</title>
      <link>http://example.org/%E6%85%95%E8%AF%BE%E7%BD%91%E9%A1%B9%E7%9B%AE%E7%82%B8%E9%B8%A1%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/</link>
      <pubDate>Mon, 11 Dec 2017 21:19:23 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E6%85%95%E8%AF%BE%E7%BD%91%E9%A1%B9%E7%9B%AE%E7%82%B8%E9%B8%A1%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/</guid>
      <description>慕课网上的vue项目，跟着做了20几天了， 因为提供不了node服务，歌单和歌词暂时请求不了， Github：https://github.co</description>
    </item>
    <item>
      <title>mongo数据库增删改查方法总结</title>
      <link>http://example.org/mongo%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 02 Nov 2017 23:23:44 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/mongo%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</guid>
      <description>介绍 mongo数据库是nosql（非结构性数据库）的一种，存储格式不是传统的表、行、字段，它的数据库是由多个集合组成，每个集合包含很多文档，</description>
    </item>
    <item>
      <title>nodejs中书写自己的require方法</title>
      <link>http://example.org/nodejs%E4%B8%AD%E4%B9%A6%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84require%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 26 Oct 2017 01:58:05 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/nodejs%E4%B8%AD%E4%B9%A6%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84require%E6%96%B9%E6%B3%95/</guid>
      <description>模块化是一种开发模式，模块化的开发有利于后期维护，提高效率，模块化的规范在服务器端是CommonJs，比如nodejs采用的就是这个，在浏览</description>
    </item>
    <item>
      <title>js中对数组的一些操作</title>
      <link>http://example.org/js%E4%B8%AD%E5%AF%B9%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 11 Oct 2017 13:28:08 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/js%E4%B8%AD%E5%AF%B9%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C/</guid>
      <description>对于angular，还是先放放，国庆期间看了点VUe.js,最近这两天在FCC（free code camp）刷题，以前学的知识又忘了，看到数组的几个</description>
    </item>
    <item>
      <title>canvas小案例：fly birds</title>
      <link>http://example.org/canvas%E5%B0%8F%E6%A1%88%E4%BE%8Bfly-birds/</link>
      <pubDate>Sat, 30 Sep 2017 11:05:40 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/canvas%E5%B0%8F%E6%A1%88%E4%BE%8Bfly-birds/</guid>
      <description>我们可以看到这个游戏由背景蓝天，土地，小鸟，管道四部分组成，在开始游戏我们必须保证全部加载完所有图片资源，这里书写一个函数传进所有图片资源，</description>
    </item>
    <item>
      <title>canvas画图API整理</title>
      <link>http://example.org/canvas%E7%94%BB%E5%9B%BEapi%E6%95%B4%E7%90%86/</link>
      <pubDate>Tue, 26 Sep 2017 07:51:10 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/canvas%E7%94%BB%E5%9B%BEapi%E6%95%B4%E7%90%86/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;canvas 是 HTML5 提供的一个用于展示绘图效果的标签.
canvas 原意画布, 帆布. 在 HTML 页面中用于展示绘图效果. 基本语法：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;使用 canvas 标签, 即可在页面中开辟一格区域. 可以设置其 width 和 height 设置该区域的尺寸.&lt;/li&gt;
&lt;li&gt;默认 canvas 的宽高为 300 和 150.&lt;/li&gt;
&lt;li&gt;不要使用 CSS 的方式设置宽高, 应该使用 HTML 属性.&lt;/li&gt;
&lt;li&gt;如果浏览器不支持 canvas 标签, 那么就会将其解释为 div 标签. 因此常常在 canvas 中嵌入文本, 以提示用户浏览器的能力.&lt;/li&gt;
&lt;li&gt;canvas 的兼容性非常强, 只要支持该标签的, 基本功能都一样, 因此不用考虑兼容性问题.&lt;/li&gt;
&lt;li&gt;canvas 本身不能绘图. 是使用 JavaScript 来完成绘图. canvas 对象提供了各种绘图用的 api.
基本使用方法：&lt;/li&gt;
&lt;li&gt;获得 canvas 对象.&lt;/li&gt;
&lt;li&gt;调用 getContext 方法, 提供字符串参数 &amp;lsquo;2d&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;该方法返回 CanvasRenderingContext2D 类型的对象. 该对象提供基本的绘图命令.&lt;/li&gt;
&lt;li&gt;使用 CanvasRenderingContext2D 对象提供的方法进行绘图.&lt;/li&gt;
&lt;li&gt;基本绘图命令
&lt;ul&gt;
&lt;li&gt;设置开始绘图的位置: context.moveTo( x, y ).&lt;/li&gt;
&lt;li&gt;设置直线到的位置: context.lineTo( x, y ).&lt;/li&gt;
&lt;li&gt;描边绘制: context.stroke().&lt;/li&gt;
&lt;li&gt;填充绘制: context.fill().&lt;/li&gt;
&lt;li&gt;闭合路径: context.closePath().&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>简述CSS3中的动画</title>
      <link>http://example.org/%E7%AE%80%E8%BF%B0css3%E4%B8%AD%E7%9A%84%E5%8A%A8%E7%94%BB/</link>
      <pubDate>Sun, 17 Sep 2017 12:04:35 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E7%AE%80%E8%BF%B0css3%E4%B8%AD%E7%9A%84%E5%8A%A8%E7%94%BB/</guid>
      <description>动画是CSS3中具有颠覆性的特征之一，可通过设置多个节点来精确控制一个或一组动画，常用来实现复杂的动画效果。 在CSS3中的设置动画步骤： a、</description>
    </item>
    <item>
      <title>CSS3里的flexbox布局</title>
      <link>http://example.org/css3%E9%87%8C%E7%9A%84flexbox%E5%B8%83%E5%B1%80/</link>
      <pubDate>Thu, 14 Sep 2017 16:47:50 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/css3%E9%87%8C%E7%9A%84flexbox%E5%B8%83%E5%B1%80/</guid>
      <description>一般我们在页面中的布局都用浮动或是定位来解决，但是浮动的初衷是解决文字环绕图片的问题，但是现在CSS3中出现了flexbox布局，一个真正为</description>
    </item>
    <item>
      <title>关于cookie和session的区别以及在PHP中的用法</title>
      <link>http://example.org/%E5%85%B3%E4%BA%8Ecookie%E5%92%8Csession%E7%9A%84%E5%8C%BA%E5%88%AB%E4%BB%A5%E5%8F%8A%E5%9C%A8php%E4%B8%AD%E7%9A%84%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sat, 02 Sep 2017 16:20:28 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E5%85%B3%E4%BA%8Ecookie%E5%92%8Csession%E7%9A%84%E5%8C%BA%E5%88%AB%E4%BB%A5%E5%8F%8A%E5%9C%A8php%E4%B8%AD%E7%9A%84%E7%94%A8%E6%B3%95/</guid>
      <description>自学了5个月，我最近才听说cookie和session&amp;hellip;.之前做验证码接触了session,现在整理一下： 二者定义： cooki</description>
    </item>
    <item>
      <title>理解http协议</title>
      <link>http://example.org/%E7%90%86%E8%A7%A3http%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Sat, 02 Sep 2017 08:46:43 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E7%90%86%E8%A7%A3http%E5%8D%8F%E8%AE%AE/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;http协议全称超文本传输协议，它是无连接无状态的，默认端口为80，学习前端呢，我们也需要对其请求到响应也要有一个熟悉过程。 无连接：就是每次连接只能处理一次请求； 无状态：就是没有记忆能力，每次连接都会重复传数据，上次已经请求了的话。 http协议与服务器的交互主要有4种方式GET,POST,PUT,DLETE,分别对应着查询、修改、增添、删除操作。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>表单验证（ajax&#43;jQuery Validate&#43;PHPgd2）</title>
      <link>http://example.org/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81ajax-jquery-validate-phpgd2/</link>
      <pubDate>Fri, 25 Aug 2017 14:42:59 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81ajax-jquery-validate-phpgd2/</guid>
      <description>一般在我们浏览器端负责输入数据格式的验证，在服务器端利用ajax技术查询验证输入数据是否重复 一、浏览器端的验证我们可以用jQuery Vali</description>
    </item>
    <item>
      <title>angular  js 获取天气预报</title>
      <link>http://example.org/angular-js-%E8%8E%B7%E5%8F%96%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5/</link>
      <pubDate>Thu, 24 Aug 2017 15:31:40 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/angular-js-%E8%8E%B7%E5%8F%96%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5/</guid>
      <description>首先了解一下跨域：跨域就是从一个网站去请求另一个网站中的内容。 要想实现跨域，现在主流的做法是用jsonp。 一、jsonp的原理 我们发现HTM</description>
    </item>
    <item>
      <title>ajax复习</title>
      <link>http://example.org/ajax%E5%A4%8D%E4%B9%A0/</link>
      <pubDate>Thu, 24 Aug 2017 12:13:55 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/ajax%E5%A4%8D%E4%B9%A0/</guid>
      <description>ajax是一种在不刷新页面的情况下，局部更新数据的一种技术，XMLHTTPRequest对象是ajax的基础。 使用ajax有以下4个步骤： （</description>
    </item>
    <item>
      <title>初识angular js ,备忘录练习</title>
      <link>http://example.org/%E5%88%9D%E8%AF%86angular-js-%E5%A4%87%E5%BF%98%E5%BD%95%E7%BB%83%E4%B9%A0/</link>
      <pubDate>Tue, 22 Aug 2017 13:38:27 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E5%88%9D%E8%AF%86angular-js-%E5%A4%87%E5%BF%98%E5%BD%95%E7%BB%83%E4%B9%A0/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;一个备忘录小练习，可以写入计划和删除计划。 进一步了解了一些指令的使用：&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>初识angular js，tab栏切换练习</title>
      <link>http://example.org/%E5%88%9D%E8%AF%86angular-jstab%E6%A0%8F%E5%88%87%E6%8D%A2%E7%BB%83%E4%B9%A0/</link>
      <pubDate>Tue, 22 Aug 2017 07:02:06 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E5%88%9D%E8%AF%86angular-jstab%E6%A0%8F%E5%88%87%E6%8D%A2%E7%BB%83%E4%B9%A0/</guid>
      <description>看到了angular js， angular js是一款MVC前端框架，以数据和逻辑作为驱动核心，有很多特性：模块化，双向数据绑定，语义化标签等，与之类似的还</description>
    </item>
    <item>
      <title>关于Git的使用</title>
      <link>http://example.org/%E5%85%B3%E4%BA%8Egit%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 20 Aug 2017 08:32:07 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E5%85%B3%E4%BA%8Egit%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>从学习前端开始就听说过Git，无奈初期并不需要了解，但是在以后的学习或工作中这是必须会的一项技能，这几天也看了一些资料，整理一下 一、什么是G</description>
    </item>
    <item>
      <title>JavaScript基础知识复习（五）函数的四种调用模式</title>
      <link>http://example.org/javascript%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E4%BA%94%E5%87%BD%E6%95%B0%E7%9A%84%E5%9B%9B%E7%A7%8D%E8%B0%83%E7%94%A8%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 09 Aug 2017 19:35:54 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/javascript%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E4%BA%94%E5%87%BD%E6%95%B0%E7%9A%84%E5%9B%9B%E7%A7%8D%E8%B0%83%E7%94%A8%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;&lt;strong&gt;一、函数模式&lt;/strong&gt;
这个我们再熟悉不过了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-JavaScript&#34; data-lang=&#34;JavaScript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;；&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//这里函数名调用，就是函数模式
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;注意：这里的this指的是window全局对象；
&lt;strong&gt;二、方法模式&lt;/strong&gt;
函数放在对象内，是对象的一个属性，我们调用函数，这就是方法模式。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;obj&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    <item>
      <title>javascript基础知识复习（四）递归与闭包</title>
      <link>http://example.org/javascript%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E5%9B%9B%E9%80%92%E5%BD%92%E4%B8%8E%E9%97%AD%E5%8C%85/</link>
      <pubDate>Wed, 09 Aug 2017 17:55:48 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/javascript%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E5%9B%9B%E9%80%92%E5%BD%92%E4%B8%8E%E9%97%AD%E5%8C%85/</guid>
      <description>&lt;h2 id=&#34;递归&#34;&gt;递归&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;递归概念：在函数内调用函数自己，就是递归。 注意：递归要有结束条件，没有递归结束条件的递归，就是死递归。&lt;/li&gt;
&lt;li&gt;使用递归的方法：化归思想。化归思想是将一个问题由难化易，由繁化简，由复杂化简单的过程称为化归，它是转化和归结的简称。
例子：求1-100的和 利用划归思想：var sum=foo(100); 1.求foo（100）即求foo（99）+100； 2.求foo（99），即求foo（98）+99； 3.求foo（98），即求foo（97）+98； &amp;hellip; 最后求foo（1），就是1;//这就是约束条件 最后利用递归，函数就是：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;foo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;利用递归可以解决很多问题，比如算出阶乘，算出斐波那契数列等；&lt;/p&gt;</description>
    </item>
    <item>
      <title>js中的作用域及变量提升</title>
      <link>http://example.org/js%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%8F%8A%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/</link>
      <pubDate>Mon, 07 Aug 2017 21:35:02 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/js%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%8F%8A%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/</guid>
      <description>一、作用域 作用域有：块级作用域和词法作用域； 块级作用域：使用{}包裹起来的，里面的变量外面是不可以访问的，js没有块级作用域，js里外面是可</description>
    </item>
    <item>
      <title>javascript基础知识复习（三）js中的继承</title>
      <link>http://example.org/javascript%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E4%B8%89js%E4%B8%AD%E7%9A%84%E7%BB%A7%E6%89%BF/</link>
      <pubDate>Mon, 07 Aug 2017 15:37:44 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/javascript%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E4%B8%89js%E4%B8%AD%E7%9A%84%E7%BB%A7%E6%89%BF/</guid>
      <description>js中共有6种继承 一、原型链 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 function SuperType(){ this.prototype=true; } SuperType.prototype.getSuperValue=function(){ return this.property } function SubType(){ this.subPrototy=false; } //继承了SuperType SubType.prototype=new SuperType(); SubType.prototype.getSubValue=function(){ return this.subProperty; } var instance = new SubType(); console,log(instance.getSuperValue);//true console.log(instance.getSubValue);//false</description>
    </item>
    <item>
      <title>javascript基础知识复习（二）面向对象</title>
      <link>http://example.org/javascript%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E4%BA%8C%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Sun, 06 Aug 2017 18:36:39 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/javascript%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E4%BA%8C%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</guid>
      <description>一、什么是面向对象？与面向过程又有什么关系？ 面向对象是一种思维方式，解决的重点放在对象上； 面向过程也是一种思维方式，解决的重点放在详细的步骤</description>
    </item>
    <item>
      <title>javascript基础知识复习（一）基本概念</title>
      <link>http://example.org/javascript%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E4%B8%80%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Sun, 06 Aug 2017 16:50:11 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/javascript%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E4%B8%80%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid>
      <description>一、js的组成 ECMAScript：js的核心，规范了js的语法； DOM：文档对象模型，提供了操作DOM元素的API； BOM：浏览器对象模型</description>
    </item>
    <item>
      <title>用面向对象实现歌曲的增删改查</title>
      <link>http://example.org/%E7%94%A8%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%AE%9E%E7%8E%B0%E6%AD%8C%E6%9B%B2%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</link>
      <pubDate>Sun, 06 Aug 2017 01:41:37 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E7%94%A8%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%AE%9E%E7%8E%B0%E6%AD%8C%E6%9B%B2%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;自定义构造函数，在其原型对象上书写增删改查函数，再调用拼接字符串到HTML页面即可； 构造函数如下：&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>js特效之三大家族、event事件</title>
      <link>http://example.org/js%E7%89%B9%E6%95%88%E4%B9%8B%E4%B8%89%E5%A4%A7%E5%AE%B6%E6%97%8Fevent%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Tue, 01 Aug 2017 20:30:14 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/js%E7%89%B9%E6%95%88%E4%B9%8B%E4%B8%89%E5%A4%A7%E5%AE%B6%E6%97%8Fevent%E4%BA%8B%E4%BB%B6/</guid>
      <description>老是忘，好好整理一下。 三大家族：offset（位移）、scroll（卷页）、client（可视区）。 offset家族( 5个属性) offset</description>
    </item>
    <item>
      <title>旋转轮播图</title>
      <link>http://example.org/%E6%97%8B%E8%BD%AC%E8%BD%AE%E6%92%AD%E5%9B%BE/</link>
      <pubDate>Mon, 31 Jul 2017 09:29:27 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E6%97%8B%E8%BD%AC%E8%BD%AE%E6%92%AD%E5%9B%BE/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;与一般轮播图不同，用缓动动画做，我们需要简单封装一个缓动框架&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>PC端JD首页</title>
      <link>http://example.org/pc%E7%AB%AFjd%E9%A6%96%E9%A1%B5/</link>
      <pubDate>Wed, 26 Jul 2017 19:26:32 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/pc%E7%AB%AFjd%E9%A6%96%E9%A1%B5/</guid>
      <description>在做的过程中，遇到自己忘了的，或者要注意的，都记下来了； 精灵图的定位的中心坐标是左上角； 去掉点击input后的边框：input：focus{</description>
    </item>
    <item>
      <title>Fireworks 和Ps的常用操作</title>
      <link>http://example.org/fireworks-%E5%92%8Cps%E7%9A%84%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Mon, 24 Jul 2017 07:57:32 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/fireworks-%E5%92%8Cps%E7%9A%84%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
      <description>Fireworks的常用快捷键： V：切换黑鼠标 U：画图 K：切片 I：吸色 Z：放大镜 空格：移动 shift：量尺寸 Photoshop的快捷键 z、a</description>
    </item>
    <item>
      <title>微金所页面（响应式）</title>
      <link>http://example.org/%E5%BE%AE%E9%87%91%E6%89%80%E9%A1%B5%E9%9D%A2%E5%93%8D%E5%BA%94%E5%BC%8F/</link>
      <pubDate>Sun, 23 Jul 2017 15:58:09 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E5%BE%AE%E9%87%91%E6%89%80%E9%A1%B5%E9%9D%A2%E5%93%8D%E5%BA%94%E5%BC%8F/</guid>
      <description>bootstrap+less的页面，轮播图之前写的好烦， 而在bootstrap里面直接拿框架过来用，好方便的说。 传上来微金所的字体图标不显示</description>
    </item>
    <item>
      <title>简单的使用less和koala编译工具</title>
      <link>http://example.org/%E7%AE%80%E5%8D%95%E7%9A%84%E4%BD%BF%E7%94%A8less%E5%92%8Ckoala%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Thu, 20 Jul 2017 18:31:20 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E7%AE%80%E5%8D%95%E7%9A%84%E4%BD%BF%E7%94%A8less%E5%92%8Ckoala%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/</guid>
      <description>LESSCSS是一种动态样式语言，属于CSS预处理语言的一种，它使用类似CSS的语法，为CSS的赋予了动态语言的特性，如变量、继承、运算、函</description>
    </item>
    <item>
      <title>做移动端的注意点</title>
      <link>http://example.org/%E5%81%9A%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84%E6%B3%A8%E6%84%8F%E7%82%B9/</link>
      <pubDate>Wed, 19 Jul 2017 19:39:13 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E5%81%9A%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84%E6%B3%A8%E6%84%8F%E7%82%B9/</guid>
      <description>做移动端的注意点 通栏中，不管多大的分辨率，左边和右边的距离都是不变的，我们可以将其input宽度设为100%，再在其父盒子中给出paddin</description>
    </item>
    <item>
      <title>选项卡应用</title>
      <link>http://example.org/%E9%80%89%E9%A1%B9%E5%8D%A1%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 19 Jul 2017 15:34:36 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E9%80%89%E9%A1%B9%E5%8D%A1%E5%BA%94%E7%94%A8/</guid>
      <description>很多时候我们需要用到选项卡应用，比如手机京东的商品分类； js代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 window.onload=function(){ var tabLi=document.querySelectorAll(&amp;#39;.tab li&amp;#39;); var tabDiv=document.querySelectorAll(&amp;#39;.content Div&amp;#39;); for (var i = 0; i &amp;lt; tabLi.length; i++) { tbLi[i].index=i; tabLi[i].onclick=function(){ for (var i</description>
    </item>
    <item>
      <title>伪类和伪元素、clearfix、clear</title>
      <link>http://example.org/%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0clearfixclear/</link>
      <pubDate>Mon, 17 Jul 2017 14:36:06 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0clearfixclear/</guid>
      <description>伪类是给选择器添加效果；伪元素是给将特殊效果添加到选择器。 伪类的效果等同于伪造一个类，伪元素的效果等同于伪造一个元素 伪类： 伪元素： 在CSS3</description>
    </item>
    <item>
      <title>移动端京东首页</title>
      <link>http://example.org/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%BA%AC%E4%B8%9C%E9%A6%96%E9%A1%B5/</link>
      <pubDate>Sun, 16 Jul 2017 08:19:03 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%BA%AC%E4%B8%9C%E9%A6%96%E9%A1%B5/</guid>
      <description>基本的静态布局 js效果：轮播图、倒计时、通栏透明度。 从Wordpress迁移到hexo后地址失效啦！</description>
    </item>
    <item>
      <title>移动端的touch事件</title>
      <link>http://example.org/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84touch%E4%BA%8B%E4%BB%B6/</link>
      <pubDate>Fri, 14 Jul 2017 08:43:38 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84touch%E4%BA%8B%E4%BB%B6/</guid>
      <description>移动端的touch主要用到一下三种： touchstart://手指放到屏幕上时触发 touchmove:指在屏幕上滑动式触发 touchend:</description>
    </item>
    <item>
      <title>浏览器的兼容写法</title>
      <link>http://example.org/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E5%85%BC%E5%AE%B9%E5%86%99%E6%B3%95/</link>
      <pubDate>Thu, 13 Jul 2017 13:48:59 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E5%85%BC%E5%AE%B9%E5%86%99%E6%B3%95/</guid>
      <description>浏览器的兼容性写法 -moz-对应 Firefox, -webkit-对应 Safari and Chrome -o- for Opera -ms- for Internet Explorer</description>
    </item>
    <item>
      <title>Js中的css样式</title>
      <link>http://example.org/js%E4%B8%AD%E7%9A%84css%E6%A0%B7%E5%BC%8F/</link>
      <pubDate>Thu, 13 Jul 2017 13:45:17 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/js%E4%B8%AD%E7%9A%84css%E6%A0%B7%E5%BC%8F/</guid>
      <description>js中css样式的不同 1、 JavaScript使用驼峰命名法，而css不是。 比如css中的‘border-radius’，js中的‘bord</description>
    </item>
    <item>
      <title>js特效之带有定时器的无缝轮播图（offset家族）</title>
      <link>http://example.org/js%E7%89%B9%E6%95%88%E4%B9%8B%E5%B8%A6%E6%9C%89%E5%AE%9A%E6%97%B6%E5%99%A8%E7%9A%84%E6%97%A0%E7%BC%9D%E8%BD%AE%E6%92%AD%E5%9B%BEoffset%E5%AE%B6%E6%97%8F/</link>
      <pubDate>Sun, 21 May 2017 02:42:52 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/js%E7%89%B9%E6%95%88%E4%B9%8B%E5%B8%A6%E6%9C%89%E5%AE%9A%E6%97%B6%E5%99%A8%E7%9A%84%E6%97%A0%E7%BC%9D%E8%BD%AE%E6%92%AD%E5%9B%BEoffset%E5%AE%B6%E6%97%8F/</guid>
      <description>1.了解offset家族，这里用到offsetLeft(盒子距离左侧的距离)，与style.left不同，style.left可被赋值且盒子</description>
    </item>
    <item>
      <title></title>
      <link>http://example.org/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/about/</guid>
      <description>简介 web开发者,擅长前端开发,熟悉掌握React/Vue/Typescript,掌握Java/Node开发,了解Go. 热爱新技术,热爱运动</description>
    </item>
    <item>
      <title></title>
      <link>http://example.org/link/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>2524729719@qq.com (陈晓拉尼-Asher)</author>
      <guid>http://example.org/link/</guid>
      <description>友情链接 轩陌博客 个人笔记、技术分享，低代码方向 samkallon 技术分享 &amp;&amp; 生活日常</description>
    </item>
  </channel>
</rss>
